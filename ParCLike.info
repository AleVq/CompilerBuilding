-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from ParCLike.y
-----------------------------------------------------------------------------

state 57 contains 1 shift/reduce conflicts.
state 84 contains 1 shift/reduce conflicts.
state 179 contains 1 shift/reduce conflicts.

rule 85 is unused
rule 86 is unused

terminal '&' is unused
terminal '\\' is unused
terminal L_quoted is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	%start_pStmtDecl -> StmtDecl                       (1)
	%start_pRExpr -> RExpr                             (2)
	%start_pLExpr -> LExpr                             (3)
	Integer -> L_integ                                 (4)
	Char -> L_charac                                   (5)
	Double -> L_doubl                                  (6)
	Ident -> L_ident                                   (7)
	Boolean -> 'True'                                  (8)
	Boolean -> 'False'                                 (9)
	RExpr -> '(' RExpr ')'                             (10)
	RExpr -> RExpr '||' RExpr                          (11)
	RExpr -> RExpr '&&' RExpr                          (12)
	RExpr -> RExpr '==' RExpr                          (13)
	RExpr -> RExpr '!=' RExpr                          (14)
	RExpr -> RExpr '<' RExpr                           (15)
	RExpr -> RExpr '<=' RExpr                          (16)
	RExpr -> RExpr '>' RExpr                           (17)
	RExpr -> RExpr '>=' RExpr                          (18)
	RExpr -> RExpr '+' RExpr                           (19)
	RExpr -> RExpr '-' RExpr                           (20)
	RExpr -> RExpr '*' RExpr                           (21)
	RExpr -> RExpr '/' RExpr                           (22)
	RExpr -> RExpr '%' RExpr                           (23)
	RExpr -> RExpr '^' RExpr                           (24)
	RExpr -> '!' RExpr                                 (25)
	RExpr -> '-' RExpr                                 (26)
	RExpr -> LExpr                                     (27)
	RExpr -> Ident '(' ListRExpr ')'                   (28)
	RExpr -> Integer                                   (29)
	RExpr -> Char                                      (30)
	RExpr -> Double                                    (31)
	RExpr -> Boolean                                   (32)
	FunCall -> Ident '(' ListRExpr ')'                 (33)
	ListRExpr ->                                       (34)
	ListRExpr -> RExpr                                 (35)
	ListRExpr -> RExpr ',' ListRExpr                   (36)
	LExpr -> LExpr1                                    (37)
	LExpr -> '*' RExpr                                 (38)
	LExpr -> '++' LExpr1                               (39)
	LExpr -> '--' LExpr1                               (40)
	LExpr1 -> LExpr2                                   (41)
	LExpr1 -> LExpr2 '++'                              (42)
	LExpr1 -> LExpr2 '--'                              (43)
	LExpr2 -> '(' LExpr ')'                            (44)
	LExpr2 -> BLExpr                                   (45)
	BLExpr -> BLExpr '[' RExpr ']'                     (46)
	BLExpr -> Ident                                    (47)
	Program -> ListDecl                                (48)
	ListDecl ->                                        (49)
	ListDecl -> ListDecl Decl                          (50)
	Decl -> Type ListVarDeclInit ';'                   (51)
	Decl -> Type ListIdent ';'                         (52)
	Decl -> Type Ident '(' ListParameter ')' ListStmtDecl   (53)
	ListVarDeclInit -> VarDeclInit                     (54)
	ListVarDeclInit -> VarDeclInit ',' ListVarDeclInit   (55)
	ListIdent -> Ident                                 (56)
	ListIdent -> Ident ',' ListIdent                   (57)
	ListStmtDecl -> StmtDecl                           (58)
	ListStmtDecl -> StmtDecl ',' ListStmtDecl          (59)
	Type -> Type '[' Integer ']'                       (60)
	Type -> Type '*'                                   (61)
	Type -> 'bool'                                     (62)
	Type -> 'char'                                     (63)
	Type -> 'float'                                    (64)
	Type -> 'int'                                      (65)
	Type -> 'void'                                     (66)
	VarDeclInit -> Ident '=' ComplexRExpr              (67)
	ComplexRExpr -> RExpr                              (68)
	ComplexRExpr -> '{' ListComplexRExpr '}'           (69)
	ListComplexRExpr -> ComplexRExpr                   (70)
	ListComplexRExpr -> ComplexRExpr ',' ListComplexRExpr   (71)
	ListParameter ->                                   (72)
	ListParameter -> Parameter                         (73)
	ListParameter -> Parameter ',' ListParameter       (74)
	Parameter -> Modality Type Ident                   (75)
	Modality ->                                        (76)
	Modality -> 'val'                                  (77)
	Modality -> 'ref'                                  (78)
	Modality -> 'const'                                (79)
	Modality -> 'res'                                  (80)
	Modality -> 'valres'                               (81)
	Modality -> 'name'                                 (82)
	StmtDecl -> Decl                                   (83)
	StmtDecl -> Stmt                                   (84)
	ListStmt ->                                        (85)
	ListStmt -> ListStmt Stmt                          (86)
	Stmt -> FunCall ';'                                (87)
	Stmt -> '{' ListStmtDecl '}'                       (88)
	Stmt -> JumpStmt ';'                               (89)
	Stmt -> IterStmt                                   (90)
	Stmt -> SelectionStmt                              (91)
	Stmt -> LExpr Assignment_op RExpr ';'              (92)
	Stmt -> LExpr ';'                                  (93)
	Assignment_op -> '='                               (94)
	Assignment_op -> '*='                              (95)
	Assignment_op -> '+='                              (96)
	Assignment_op -> '/='                              (97)
	Assignment_op -> '-='                              (98)
	Assignment_op -> '^='                              (99)
	Assignment_op -> '&='                              (100)
	Assignment_op -> '|='                              (101)
	JumpStmt -> 'break'                                (102)
	JumpStmt -> 'continue'                             (103)
	JumpStmt -> 'return'                               (104)
	JumpStmt -> 'return' '(' RExpr ')'                 (105)
	SelectionStmt -> 'if' '(' RExpr ')' ListStmtDecl   (106)
	SelectionStmt -> 'if' '(' RExpr ')' ListStmtDecl 'else' ListStmtDecl   (107)
	IterStmt -> 'while' '(' RExpr ')' ListStmtDecl     (108)
	IterStmt -> 'do' ListStmtDecl 'while' '(' RExpr ')' ';'   (109)
	IterStmt -> 'for' '(' Stmt ';' RExpr ';' Stmt ')' ListStmtDecl   (110)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'&='           { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'*='           { PT _ (TS _ 10) }
	'+'            { PT _ (TS _ 11) }
	'++'           { PT _ (TS _ 12) }
	'+='           { PT _ (TS _ 13) }
	','            { PT _ (TS _ 14) }
	'-'            { PT _ (TS _ 15) }
	'--'           { PT _ (TS _ 16) }
	'-='           { PT _ (TS _ 17) }
	'/'            { PT _ (TS _ 18) }
	'/='           { PT _ (TS _ 19) }
	';'            { PT _ (TS _ 20) }
	'<'            { PT _ (TS _ 21) }
	'<='           { PT _ (TS _ 22) }
	'='            { PT _ (TS _ 23) }
	'=='           { PT _ (TS _ 24) }
	'>'            { PT _ (TS _ 25) }
	'>='           { PT _ (TS _ 26) }
	'False'        { PT _ (TS _ 27) }
	'True'         { PT _ (TS _ 28) }
	'['            { PT _ (TS _ 29) }
	']'            { PT _ (TS _ 30) }
	'^'            { PT _ (TS _ 31) }
	'^='           { PT _ (TS _ 32) }
	'bool'         { PT _ (TS _ 33) }
	'break'        { PT _ (TS _ 34) }
	'char'         { PT _ (TS _ 35) }
	'const'        { PT _ (TS _ 36) }
	'continue'     { PT _ (TS _ 37) }
	'do'           { PT _ (TS _ 38) }
	'else'         { PT _ (TS _ 39) }
	'float'        { PT _ (TS _ 40) }
	'for'          { PT _ (TS _ 41) }
	'if'           { PT _ (TS _ 42) }
	'int'          { PT _ (TS _ 43) }
	'name'         { PT _ (TS _ 44) }
	'ref'          { PT _ (TS _ 45) }
	'res'          { PT _ (TS _ 46) }
	'return'       { PT _ (TS _ 47) }
	'val'          { PT _ (TS _ 48) }
	'valres'       { PT _ (TS _ 49) }
	'void'         { PT _ (TS _ 50) }
	'while'        { PT _ (TS _ 51) }
	'{'            { PT _ (TS _ 52) }
	'|='           { PT _ (TS _ 53) }
	'||'           { PT _ (TS _ 54) }
	'}'            { PT _ (TS _ 55) }
	'\\'           { PT _ (TS _ 56) }
	L_integ        { PT _ (TI $$) }
	L_charac       { PT _ (TC $$) }
	L_quoted       { PT _ (TL $$) }
	L_doubl        { PT _ (TD $$) }
	L_ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	%start_pStmtDecl rule  1
	%start_pRExpr   rule  2
	%start_pLExpr   rule  3
	Integer         rule  4
	Char            rule  5
	Double          rule  6
	Ident           rule  7
	Boolean         rules 8, 9
	RExpr           rules 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
	FunCall         rule  33
	ListRExpr       rules 34, 35, 36
	LExpr           rules 37, 38, 39, 40
	LExpr1          rules 41, 42, 43
	LExpr2          rules 44, 45
	BLExpr          rules 46, 47
	Program         rule  48
	ListDecl        rules 49, 50
	Decl            rules 51, 52, 53
	ListVarDeclInit rules 54, 55
	ListIdent       rules 56, 57
	ListStmtDecl    rules 58, 59
	Type            rules 60, 61, 62, 63, 64, 65, 66
	VarDeclInit     rule  67
	ComplexRExpr    rules 68, 69
	ListComplexRExpr rules 70, 71
	ListParameter   rules 72, 73, 74
	Parameter       rule  75
	Modality        rules 76, 77, 78, 79, 80, 81, 82
	StmtDecl        rules 83, 84
	ListStmt        rules 85, 86
	Stmt            rules 87, 88, 89, 90, 91, 92, 93
	Assignment_op   rules 94, 95, 96, 97, 98, 99, 100, 101
	JumpStmt        rules 102, 103, 104, 105
	SelectionStmt   rules 106, 107
	IterStmt        rules 108, 109, 110

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         reduce using rule 49
	'char'         reduce using rule 49
	'float'        reduce using rule 49
	'int'          reduce using rule 49
	'void'         reduce using rule 49
	%eof           reduce using rule 49

	Program        goto state 53
	ListDecl       goto state 54

State 1


	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'bool'         shift, and enter state 40
	'break'        shift, and enter state 41
	'char'         shift, and enter state 42
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'float'        shift, and enter state 45
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 48
	'return'       shift, and enter state 49
	'void'         shift, and enter state 50
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Decl           goto state 33
	Type           goto state 34
	StmtDecl       goto state 35
	Stmt           goto state 36
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 2


	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 21
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 3


	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	L_ident        shift, and enter state 15

	Ident          goto state 6
	LExpr          goto state 7
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 4


	L_integ        shift, and enter state 5


State 5

	Integer -> L_integ .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	'&='           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'*='           reduce using rule 4
	'+'            reduce using rule 4
	'+='           reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'-='           reduce using rule 4
	'/'            reduce using rule 4
	'/='           reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'='            reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	']'            reduce using rule 4
	'^'            reduce using rule 4
	'^='           reduce using rule 4
	'|='           reduce using rule 4
	'||'           reduce using rule 4
	'}'            reduce using rule 4
	%eof           reduce using rule 4


State 6

	BLExpr -> Ident .                                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'&='           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'*='           reduce using rule 47
	'+'            reduce using rule 47
	'++'           reduce using rule 47
	'+='           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'--'           reduce using rule 47
	'-='           reduce using rule 47
	'/'            reduce using rule 47
	'/='           reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'^='           reduce using rule 47
	'|='           reduce using rule 47
	'||'           reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 7

	%start_pLExpr -> LExpr .                            (rule 3)

	%eof           accept


State 8

	LExpr -> LExpr1 .                                   (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	'&='           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'*='           reduce using rule 37
	'+'            reduce using rule 37
	'+='           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'-='           reduce using rule 37
	'/'            reduce using rule 37
	'/='           reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	']'            reduce using rule 37
	'^'            reduce using rule 37
	'^='           reduce using rule 37
	'|='           reduce using rule 37
	'||'           reduce using rule 37
	'}'            reduce using rule 37
	%eof           reduce using rule 37


State 9

	LExpr1 -> LExpr2 .                                  (rule 41)
	LExpr1 -> LExpr2 . '++'                             (rule 42)
	LExpr1 -> LExpr2 . '--'                             (rule 43)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	'&='           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'*='           reduce using rule 41
	'+'            reduce using rule 41
	'++'           shift, and enter state 106
	'+='           reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'--'           shift, and enter state 107
	'-='           reduce using rule 41
	'/'            reduce using rule 41
	'/='           reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	']'            reduce using rule 41
	'^'            reduce using rule 41
	'^='           reduce using rule 41
	'|='           reduce using rule 41
	'||'           reduce using rule 41
	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 10

	LExpr2 -> BLExpr .                                  (rule 45)
	BLExpr -> BLExpr . '[' RExpr ']'                    (rule 46)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	'&='           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'*='           reduce using rule 45
	'+'            reduce using rule 45
	'++'           reduce using rule 45
	'+='           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'--'           reduce using rule 45
	'-='           reduce using rule 45
	'/'            reduce using rule 45
	'/='           reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'['            shift, and enter state 105
	']'            reduce using rule 45
	'^'            reduce using rule 45
	'^='           reduce using rule 45
	'|='           reduce using rule 45
	'||'           reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 11

	LExpr2 -> '(' . LExpr ')'                           (rule 44)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	L_ident        shift, and enter state 15

	Ident          goto state 6
	LExpr          goto state 104
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 12

	LExpr -> '*' . RExpr                                (rule 38)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 103
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 13

	LExpr -> '++' . LExpr1                              (rule 39)

	'('            shift, and enter state 11
	L_ident        shift, and enter state 15

	Ident          goto state 6
	LExpr1         goto state 102
	LExpr2         goto state 9
	BLExpr         goto state 10

State 14

	LExpr -> '--' . LExpr1                              (rule 40)

	'('            shift, and enter state 11
	L_ident        shift, and enter state 15

	Ident          goto state 6
	LExpr1         goto state 101
	LExpr2         goto state 9
	BLExpr         goto state 10

State 15

	Ident -> L_ident .                                  (rule 7)

	'!='           reduce using rule 7
	'%'            reduce using rule 7
	'&&'           reduce using rule 7
	'&='           reduce using rule 7
	'('            reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'*='           reduce using rule 7
	'+'            reduce using rule 7
	'++'           reduce using rule 7
	'+='           reduce using rule 7
	','            reduce using rule 7
	'-'            reduce using rule 7
	'--'           reduce using rule 7
	'-='           reduce using rule 7
	'/'            reduce using rule 7
	'/='           reduce using rule 7
	';'            reduce using rule 7
	'<'            reduce using rule 7
	'<='           reduce using rule 7
	'='            reduce using rule 7
	'=='           reduce using rule 7
	'>'            reduce using rule 7
	'>='           reduce using rule 7
	'['            reduce using rule 7
	']'            reduce using rule 7
	'^'            reduce using rule 7
	'^='           reduce using rule 7
	'|='           reduce using rule 7
	'||'           reduce using rule 7
	'}'            reduce using rule 7
	%eof           reduce using rule 7


State 16

	RExpr -> Integer .                                  (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&&'           reduce using rule 29
	'&='           reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'*='           reduce using rule 29
	'+'            reduce using rule 29
	'+='           reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'-='           reduce using rule 29
	'/'            reduce using rule 29
	'/='           reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'='            reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	']'            reduce using rule 29
	'^'            reduce using rule 29
	'^='           reduce using rule 29
	'|='           reduce using rule 29
	'||'           reduce using rule 29
	'}'            reduce using rule 29
	%eof           reduce using rule 29


State 17

	RExpr -> Char .                                     (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&&'           reduce using rule 30
	'&='           reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'*='           reduce using rule 30
	'+'            reduce using rule 30
	'+='           reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'-='           reduce using rule 30
	'/'            reduce using rule 30
	'/='           reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'='            reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	']'            reduce using rule 30
	'^'            reduce using rule 30
	'^='           reduce using rule 30
	'|='           reduce using rule 30
	'||'           reduce using rule 30
	'}'            reduce using rule 30
	%eof           reduce using rule 30


State 18

	RExpr -> Double .                                   (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	'&='           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'*='           reduce using rule 31
	'+'            reduce using rule 31
	'+='           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'-='           reduce using rule 31
	'/'            reduce using rule 31
	'/='           reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'='            reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	']'            reduce using rule 31
	'^'            reduce using rule 31
	'^='           reduce using rule 31
	'|='           reduce using rule 31
	'||'           reduce using rule 31
	'}'            reduce using rule 31
	%eof           reduce using rule 31


State 19

	RExpr -> Ident . '(' ListRExpr ')'                  (rule 28)
	BLExpr -> Ident .                                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'&='           reduce using rule 47
	'('            shift, and enter state 100
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'*='           reduce using rule 47
	'+'            reduce using rule 47
	'++'           reduce using rule 47
	'+='           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'--'           reduce using rule 47
	'-='           reduce using rule 47
	'/'            reduce using rule 47
	'/='           reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'^='           reduce using rule 47
	'|='           reduce using rule 47
	'||'           reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 20

	RExpr -> Boolean .                                  (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	'&='           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'*='           reduce using rule 32
	'+'            reduce using rule 32
	'+='           reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'-='           reduce using rule 32
	'/'            reduce using rule 32
	'/='           reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'='            reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	']'            reduce using rule 32
	'^'            reduce using rule 32
	'^='           reduce using rule 32
	'|='           reduce using rule 32
	'||'           reduce using rule 32
	'}'            reduce using rule 32
	%eof           reduce using rule 32


State 21

	%start_pRExpr -> RExpr .                            (rule 2)
	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99
	%eof           accept


State 22

	RExpr -> LExpr .                                    (rule 27)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'&&'           reduce using rule 27
	'&='           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'*='           reduce using rule 27
	'+'            reduce using rule 27
	'+='           reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'-='           reduce using rule 27
	'/'            reduce using rule 27
	'/='           reduce using rule 27
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'='            reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	']'            reduce using rule 27
	'^'            reduce using rule 27
	'^='           reduce using rule 27
	'|='           reduce using rule 27
	'||'           reduce using rule 27
	'}'            reduce using rule 27
	%eof           reduce using rule 27


State 23

	RExpr -> '!' . RExpr                                (rule 25)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 85
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 24

	RExpr -> '(' . RExpr ')'                            (rule 10)
	LExpr2 -> '(' . LExpr ')'                           (rule 44)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 83
	LExpr          goto state 84
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 25

	RExpr -> '-' . RExpr                                (rule 26)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 82
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 26

	Boolean -> 'False' .                                (rule 9)

	'!='           reduce using rule 9
	'%'            reduce using rule 9
	'&&'           reduce using rule 9
	'&='           reduce using rule 9
	')'            reduce using rule 9
	'*'            reduce using rule 9
	'*='           reduce using rule 9
	'+'            reduce using rule 9
	'+='           reduce using rule 9
	','            reduce using rule 9
	'-'            reduce using rule 9
	'-='           reduce using rule 9
	'/'            reduce using rule 9
	'/='           reduce using rule 9
	';'            reduce using rule 9
	'<'            reduce using rule 9
	'<='           reduce using rule 9
	'='            reduce using rule 9
	'=='           reduce using rule 9
	'>'            reduce using rule 9
	'>='           reduce using rule 9
	']'            reduce using rule 9
	'^'            reduce using rule 9
	'^='           reduce using rule 9
	'|='           reduce using rule 9
	'||'           reduce using rule 9
	'}'            reduce using rule 9
	%eof           reduce using rule 9


State 27

	Boolean -> 'True' .                                 (rule 8)

	'!='           reduce using rule 8
	'%'            reduce using rule 8
	'&&'           reduce using rule 8
	'&='           reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	'*='           reduce using rule 8
	'+'            reduce using rule 8
	'+='           reduce using rule 8
	','            reduce using rule 8
	'-'            reduce using rule 8
	'-='           reduce using rule 8
	'/'            reduce using rule 8
	'/='           reduce using rule 8
	';'            reduce using rule 8
	'<'            reduce using rule 8
	'<='           reduce using rule 8
	'='            reduce using rule 8
	'=='           reduce using rule 8
	'>'            reduce using rule 8
	'>='           reduce using rule 8
	']'            reduce using rule 8
	'^'            reduce using rule 8
	'^='           reduce using rule 8
	'|='           reduce using rule 8
	'||'           reduce using rule 8
	'}'            reduce using rule 8
	%eof           reduce using rule 8


State 28

	Char -> L_charac .                                  (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	'&='           reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'*='           reduce using rule 5
	'+'            reduce using rule 5
	'+='           reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'-='           reduce using rule 5
	'/'            reduce using rule 5
	'/='           reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'='            reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'^'            reduce using rule 5
	'^='           reduce using rule 5
	'|='           reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5
	%eof           reduce using rule 5


State 29

	Double -> L_doubl .                                 (rule 6)

	'!='           reduce using rule 6
	'%'            reduce using rule 6
	'&&'           reduce using rule 6
	'&='           reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'*='           reduce using rule 6
	'+'            reduce using rule 6
	'+='           reduce using rule 6
	','            reduce using rule 6
	'-'            reduce using rule 6
	'-='           reduce using rule 6
	'/'            reduce using rule 6
	'/='           reduce using rule 6
	';'            reduce using rule 6
	'<'            reduce using rule 6
	'<='           reduce using rule 6
	'='            reduce using rule 6
	'=='           reduce using rule 6
	'>'            reduce using rule 6
	'>='           reduce using rule 6
	']'            reduce using rule 6
	'^'            reduce using rule 6
	'^='           reduce using rule 6
	'|='           reduce using rule 6
	'||'           reduce using rule 6
	'}'            reduce using rule 6
	%eof           reduce using rule 6


State 30

	FunCall -> Ident . '(' ListRExpr ')'                (rule 33)
	BLExpr -> Ident .                                   (rule 47)

	'&='           reduce using rule 47
	'('            shift, and enter state 81
	'*='           reduce using rule 47
	'++'           reduce using rule 47
	'+='           reduce using rule 47
	'--'           reduce using rule 47
	'-='           reduce using rule 47
	'/='           reduce using rule 47
	';'            reduce using rule 47
	'='            reduce using rule 47
	'['            reduce using rule 47
	'^='           reduce using rule 47
	'|='           reduce using rule 47


State 31

	Stmt -> FunCall . ';'                               (rule 87)

	';'            shift, and enter state 80


State 32

	Stmt -> LExpr . Assignment_op RExpr ';'             (rule 92)
	Stmt -> LExpr . ';'                                 (rule 93)

	'&='           shift, and enter state 71
	'*='           shift, and enter state 72
	'+='           shift, and enter state 73
	'-='           shift, and enter state 74
	'/='           shift, and enter state 75
	';'            shift, and enter state 76
	'='            shift, and enter state 77
	'^='           shift, and enter state 78
	'|='           shift, and enter state 79

	Assignment_op  goto state 70

State 33

	StmtDecl -> Decl .                                  (rule 83)

	')'            reduce using rule 83
	','            reduce using rule 83
	';'            reduce using rule 83
	'bool'         reduce using rule 83
	'char'         reduce using rule 83
	'else'         reduce using rule 83
	'float'        reduce using rule 83
	'int'          reduce using rule 83
	'void'         reduce using rule 83
	'while'        reduce using rule 83
	'}'            reduce using rule 83
	%eof           reduce using rule 83


State 34

	Decl -> Type . ListVarDeclInit ';'                  (rule 51)
	Decl -> Type . ListIdent ';'                        (rule 52)
	Decl -> Type . Ident '(' ListParameter ')' ListStmtDecl    (rule 53)
	Type -> Type . '[' Integer ']'                      (rule 60)
	Type -> Type . '*'                                  (rule 61)

	'*'            shift, and enter state 68
	'['            shift, and enter state 69
	L_ident        shift, and enter state 15

	Ident          goto state 64
	ListVarDeclInitgoto state 65
	ListIdent      goto state 66
	VarDeclInit    goto state 67

State 35

	%start_pStmtDecl -> StmtDecl .                      (rule 1)

	%eof           accept


State 36

	StmtDecl -> Stmt .                                  (rule 84)

	')'            reduce using rule 84
	','            reduce using rule 84
	';'            reduce using rule 84
	'bool'         reduce using rule 84
	'char'         reduce using rule 84
	'else'         reduce using rule 84
	'float'        reduce using rule 84
	'int'          reduce using rule 84
	'void'         reduce using rule 84
	'while'        reduce using rule 84
	'}'            reduce using rule 84
	%eof           reduce using rule 84


State 37

	Stmt -> JumpStmt . ';'                              (rule 89)

	';'            shift, and enter state 63


State 38

	Stmt -> SelectionStmt .                             (rule 91)

	')'            reduce using rule 91
	','            reduce using rule 91
	';'            reduce using rule 91
	'bool'         reduce using rule 91
	'char'         reduce using rule 91
	'else'         reduce using rule 91
	'float'        reduce using rule 91
	'int'          reduce using rule 91
	'void'         reduce using rule 91
	'while'        reduce using rule 91
	'}'            reduce using rule 91
	%eof           reduce using rule 91


State 39

	Stmt -> IterStmt .                                  (rule 90)

	')'            reduce using rule 90
	','            reduce using rule 90
	';'            reduce using rule 90
	'bool'         reduce using rule 90
	'char'         reduce using rule 90
	'else'         reduce using rule 90
	'float'        reduce using rule 90
	'int'          reduce using rule 90
	'void'         reduce using rule 90
	'while'        reduce using rule 90
	'}'            reduce using rule 90
	%eof           reduce using rule 90


State 40

	Type -> 'bool' .                                    (rule 62)

	'*'            reduce using rule 62
	'['            reduce using rule 62
	L_ident        reduce using rule 62


State 41

	JumpStmt -> 'break' .                               (rule 102)

	';'            reduce using rule 102


State 42

	Type -> 'char' .                                    (rule 63)

	'*'            reduce using rule 63
	'['            reduce using rule 63
	L_ident        reduce using rule 63


State 43

	JumpStmt -> 'continue' .                            (rule 103)

	';'            reduce using rule 103


State 44

	IterStmt -> 'do' . ListStmtDecl 'while' '(' RExpr ')' ';'    (rule 109)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'bool'         shift, and enter state 40
	'break'        shift, and enter state 41
	'char'         shift, and enter state 42
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'float'        shift, and enter state 45
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 48
	'return'       shift, and enter state 49
	'void'         shift, and enter state 50
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Decl           goto state 33
	ListStmtDecl   goto state 62
	Type           goto state 34
	StmtDecl       goto state 57
	Stmt           goto state 36
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 45

	Type -> 'float' .                                   (rule 64)

	'*'            reduce using rule 64
	'['            reduce using rule 64
	L_ident        reduce using rule 64


State 46

	IterStmt -> 'for' . '(' Stmt ';' RExpr ';' Stmt ')' ListStmtDecl    (rule 110)

	'('            shift, and enter state 61


State 47

	SelectionStmt -> 'if' . '(' RExpr ')' ListStmtDecl    (rule 106)
	SelectionStmt -> 'if' . '(' RExpr ')' ListStmtDecl 'else' ListStmtDecl    (rule 107)

	'('            shift, and enter state 60


State 48

	Type -> 'int' .                                     (rule 65)

	'*'            reduce using rule 65
	'['            reduce using rule 65
	L_ident        reduce using rule 65


State 49

	JumpStmt -> 'return' .                              (rule 104)
	JumpStmt -> 'return' . '(' RExpr ')'                (rule 105)

	'('            shift, and enter state 59
	';'            reduce using rule 104


State 50

	Type -> 'void' .                                    (rule 66)

	'*'            reduce using rule 66
	'['            reduce using rule 66
	L_ident        reduce using rule 66


State 51

	IterStmt -> 'while' . '(' RExpr ')' ListStmtDecl    (rule 108)

	'('            shift, and enter state 58


State 52

	Stmt -> '{' . ListStmtDecl '}'                      (rule 88)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'bool'         shift, and enter state 40
	'break'        shift, and enter state 41
	'char'         shift, and enter state 42
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'float'        shift, and enter state 45
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 48
	'return'       shift, and enter state 49
	'void'         shift, and enter state 50
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Decl           goto state 33
	ListStmtDecl   goto state 56
	Type           goto state 34
	StmtDecl       goto state 57
	Stmt           goto state 36
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 53

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 54

	Program -> ListDecl .                               (rule 48)
	ListDecl -> ListDecl . Decl                         (rule 50)

	'bool'         shift, and enter state 40
	'char'         shift, and enter state 42
	'float'        shift, and enter state 45
	'int'          shift, and enter state 48
	'void'         shift, and enter state 50
	%eof           reduce using rule 48

	Decl           goto state 55
	Type           goto state 34

State 55

	ListDecl -> ListDecl Decl .                         (rule 50)

	'bool'         reduce using rule 50
	'char'         reduce using rule 50
	'float'        reduce using rule 50
	'int'          reduce using rule 50
	'void'         reduce using rule 50
	%eof           reduce using rule 50


State 56

	Stmt -> '{' ListStmtDecl . '}'                      (rule 88)

	'}'            shift, and enter state 142


State 57

	ListStmtDecl -> StmtDecl .                          (rule 58)
	ListStmtDecl -> StmtDecl . ',' ListStmtDecl         (rule 59)

	')'            reduce using rule 58
	','            shift, and enter state 141
			(reduce using rule 58)

	';'            reduce using rule 58
	'bool'         reduce using rule 58
	'char'         reduce using rule 58
	'else'         reduce using rule 58
	'float'        reduce using rule 58
	'int'          reduce using rule 58
	'void'         reduce using rule 58
	'while'        reduce using rule 58
	'}'            reduce using rule 58
	%eof           reduce using rule 58


State 58

	IterStmt -> 'while' '(' . RExpr ')' ListStmtDecl    (rule 108)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 140
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 59

	JumpStmt -> 'return' '(' . RExpr ')'                (rule 105)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 139
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 60

	SelectionStmt -> 'if' '(' . RExpr ')' ListStmtDecl    (rule 106)
	SelectionStmt -> 'if' '(' . RExpr ')' ListStmtDecl 'else' ListStmtDecl    (rule 107)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 138
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 61

	IterStmt -> 'for' '(' . Stmt ';' RExpr ';' Stmt ')' ListStmtDecl    (rule 110)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'return'       shift, and enter state 49
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Stmt           goto state 137
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 62

	IterStmt -> 'do' ListStmtDecl . 'while' '(' RExpr ')' ';'    (rule 109)

	'while'        shift, and enter state 136


State 63

	Stmt -> JumpStmt ';' .                              (rule 89)

	')'            reduce using rule 89
	','            reduce using rule 89
	';'            reduce using rule 89
	'bool'         reduce using rule 89
	'char'         reduce using rule 89
	'else'         reduce using rule 89
	'float'        reduce using rule 89
	'int'          reduce using rule 89
	'void'         reduce using rule 89
	'while'        reduce using rule 89
	'}'            reduce using rule 89
	%eof           reduce using rule 89


State 64

	Decl -> Type Ident . '(' ListParameter ')' ListStmtDecl    (rule 53)
	ListIdent -> Ident .                                (rule 56)
	ListIdent -> Ident . ',' ListIdent                  (rule 57)
	VarDeclInit -> Ident . '=' ComplexRExpr             (rule 67)

	'('            shift, and enter state 133
	','            shift, and enter state 134
	';'            reduce using rule 56
	'='            shift, and enter state 135


State 65

	Decl -> Type ListVarDeclInit . ';'                  (rule 51)

	';'            shift, and enter state 132


State 66

	Decl -> Type ListIdent . ';'                        (rule 52)

	';'            shift, and enter state 131


State 67

	ListVarDeclInit -> VarDeclInit .                    (rule 54)
	ListVarDeclInit -> VarDeclInit . ',' ListVarDeclInit    (rule 55)

	','            shift, and enter state 130
	';'            reduce using rule 54


State 68

	Type -> Type '*' .                                  (rule 61)

	'*'            reduce using rule 61
	'['            reduce using rule 61
	L_ident        reduce using rule 61


State 69

	Type -> Type '[' . Integer ']'                      (rule 60)

	L_integ        shift, and enter state 5

	Integer        goto state 129

State 70

	Stmt -> LExpr Assignment_op . RExpr ';'             (rule 92)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 128
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 71

	Assignment_op -> '&=' .                             (rule 100)

	'!'            reduce using rule 100
	'('            reduce using rule 100
	'*'            reduce using rule 100
	'++'           reduce using rule 100
	'-'            reduce using rule 100
	'--'           reduce using rule 100
	'False'        reduce using rule 100
	'True'         reduce using rule 100
	L_integ        reduce using rule 100
	L_charac       reduce using rule 100
	L_doubl        reduce using rule 100
	L_ident        reduce using rule 100


State 72

	Assignment_op -> '*=' .                             (rule 95)

	'!'            reduce using rule 95
	'('            reduce using rule 95
	'*'            reduce using rule 95
	'++'           reduce using rule 95
	'-'            reduce using rule 95
	'--'           reduce using rule 95
	'False'        reduce using rule 95
	'True'         reduce using rule 95
	L_integ        reduce using rule 95
	L_charac       reduce using rule 95
	L_doubl        reduce using rule 95
	L_ident        reduce using rule 95


State 73

	Assignment_op -> '+=' .                             (rule 96)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'*'            reduce using rule 96
	'++'           reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'False'        reduce using rule 96
	'True'         reduce using rule 96
	L_integ        reduce using rule 96
	L_charac       reduce using rule 96
	L_doubl        reduce using rule 96
	L_ident        reduce using rule 96


State 74

	Assignment_op -> '-=' .                             (rule 98)

	'!'            reduce using rule 98
	'('            reduce using rule 98
	'*'            reduce using rule 98
	'++'           reduce using rule 98
	'-'            reduce using rule 98
	'--'           reduce using rule 98
	'False'        reduce using rule 98
	'True'         reduce using rule 98
	L_integ        reduce using rule 98
	L_charac       reduce using rule 98
	L_doubl        reduce using rule 98
	L_ident        reduce using rule 98


State 75

	Assignment_op -> '/=' .                             (rule 97)

	'!'            reduce using rule 97
	'('            reduce using rule 97
	'*'            reduce using rule 97
	'++'           reduce using rule 97
	'-'            reduce using rule 97
	'--'           reduce using rule 97
	'False'        reduce using rule 97
	'True'         reduce using rule 97
	L_integ        reduce using rule 97
	L_charac       reduce using rule 97
	L_doubl        reduce using rule 97
	L_ident        reduce using rule 97


State 76

	Stmt -> LExpr ';' .                                 (rule 93)

	')'            reduce using rule 93
	','            reduce using rule 93
	';'            reduce using rule 93
	'bool'         reduce using rule 93
	'char'         reduce using rule 93
	'else'         reduce using rule 93
	'float'        reduce using rule 93
	'int'          reduce using rule 93
	'void'         reduce using rule 93
	'while'        reduce using rule 93
	'}'            reduce using rule 93
	%eof           reduce using rule 93


State 77

	Assignment_op -> '=' .                              (rule 94)

	'!'            reduce using rule 94
	'('            reduce using rule 94
	'*'            reduce using rule 94
	'++'           reduce using rule 94
	'-'            reduce using rule 94
	'--'           reduce using rule 94
	'False'        reduce using rule 94
	'True'         reduce using rule 94
	L_integ        reduce using rule 94
	L_charac       reduce using rule 94
	L_doubl        reduce using rule 94
	L_ident        reduce using rule 94


State 78

	Assignment_op -> '^=' .                             (rule 99)

	'!'            reduce using rule 99
	'('            reduce using rule 99
	'*'            reduce using rule 99
	'++'           reduce using rule 99
	'-'            reduce using rule 99
	'--'           reduce using rule 99
	'False'        reduce using rule 99
	'True'         reduce using rule 99
	L_integ        reduce using rule 99
	L_charac       reduce using rule 99
	L_doubl        reduce using rule 99
	L_ident        reduce using rule 99


State 79

	Assignment_op -> '|=' .                             (rule 101)

	'!'            reduce using rule 101
	'('            reduce using rule 101
	'*'            reduce using rule 101
	'++'           reduce using rule 101
	'-'            reduce using rule 101
	'--'           reduce using rule 101
	'False'        reduce using rule 101
	'True'         reduce using rule 101
	L_integ        reduce using rule 101
	L_charac       reduce using rule 101
	L_doubl        reduce using rule 101
	L_ident        reduce using rule 101


State 80

	Stmt -> FunCall ';' .                               (rule 87)

	')'            reduce using rule 87
	','            reduce using rule 87
	';'            reduce using rule 87
	'bool'         reduce using rule 87
	'char'         reduce using rule 87
	'else'         reduce using rule 87
	'float'        reduce using rule 87
	'int'          reduce using rule 87
	'void'         reduce using rule 87
	'while'        reduce using rule 87
	'}'            reduce using rule 87
	%eof           reduce using rule 87


State 81

	FunCall -> Ident '(' . ListRExpr ')'                (rule 33)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	')'            reduce using rule 34
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 110
	ListRExpr      goto state 127
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 82

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	RExpr -> '-' RExpr .                                (rule 26)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'&&'           reduce using rule 26
	'&='           reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'*='           reduce using rule 26
	'+'            reduce using rule 26
	'+='           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'-='           reduce using rule 26
	'/'            reduce using rule 26
	'/='           reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'='            reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	']'            reduce using rule 26
	'^'            reduce using rule 26
	'^='           reduce using rule 26
	'|='           reduce using rule 26
	'||'           reduce using rule 26
	'}'            reduce using rule 26
	%eof           reduce using rule 26


State 83

	RExpr -> '(' RExpr . ')'                            (rule 10)
	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            shift, and enter state 126
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99


State 84

	RExpr -> LExpr .                                    (rule 27)
	LExpr2 -> '(' LExpr . ')'                           (rule 44)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'&&'           reduce using rule 27
	')'            shift, and enter state 109
			(reduce using rule 27)

	'*'            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'/'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'^'            reduce using rule 27
	'||'           reduce using rule 27


State 85

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	RExpr -> '!' RExpr .                                (rule 25)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           reduce using rule 25
	'&='           reduce using rule 25
	')'            reduce using rule 25
	'*'            shift, and enter state 89
	'*='           reduce using rule 25
	'+'            shift, and enter state 90
	'+='           reduce using rule 25
	','            reduce using rule 25
	'-'            shift, and enter state 91
	'-='           reduce using rule 25
	'/'            shift, and enter state 92
	'/='           reduce using rule 25
	';'            reduce using rule 25
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'='            reduce using rule 25
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	']'            reduce using rule 25
	'^'            shift, and enter state 98
	'^='           reduce using rule 25
	'|='           reduce using rule 25
	'||'           reduce using rule 25
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 86

	RExpr -> RExpr '!=' . RExpr                         (rule 14)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 125
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 87

	RExpr -> RExpr '%' . RExpr                          (rule 23)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 124
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 88

	RExpr -> RExpr '&&' . RExpr                         (rule 12)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 123
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 89

	RExpr -> RExpr '*' . RExpr                          (rule 21)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 122
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 90

	RExpr -> RExpr '+' . RExpr                          (rule 19)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 121
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 91

	RExpr -> RExpr '-' . RExpr                          (rule 20)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 120
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 92

	RExpr -> RExpr '/' . RExpr                          (rule 22)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 119
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 93

	RExpr -> RExpr '<' . RExpr                          (rule 15)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 118
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 94

	RExpr -> RExpr '<=' . RExpr                         (rule 16)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 117
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 95

	RExpr -> RExpr '==' . RExpr                         (rule 13)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 116
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 96

	RExpr -> RExpr '>' . RExpr                          (rule 17)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 115
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 97

	RExpr -> RExpr '>=' . RExpr                         (rule 18)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 114
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 98

	RExpr -> RExpr '^' . RExpr                          (rule 24)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 113
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 99

	RExpr -> RExpr '||' . RExpr                         (rule 11)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 112
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 100

	RExpr -> Ident '(' . ListRExpr ')'                  (rule 28)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	')'            reduce using rule 34
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 110
	ListRExpr      goto state 111
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 101

	LExpr -> '--' LExpr1 .                              (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'&='           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'*='           reduce using rule 40
	'+'            reduce using rule 40
	'+='           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'-='           reduce using rule 40
	'/'            reduce using rule 40
	'/='           reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	']'            reduce using rule 40
	'^'            reduce using rule 40
	'^='           reduce using rule 40
	'|='           reduce using rule 40
	'||'           reduce using rule 40
	'}'            reduce using rule 40
	%eof           reduce using rule 40


State 102

	LExpr -> '++' LExpr1 .                              (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'&='           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'*='           reduce using rule 39
	'+'            reduce using rule 39
	'+='           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'-='           reduce using rule 39
	'/'            reduce using rule 39
	'/='           reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	']'            reduce using rule 39
	'^'            reduce using rule 39
	'^='           reduce using rule 39
	'|='           reduce using rule 39
	'||'           reduce using rule 39
	'}'            reduce using rule 39
	%eof           reduce using rule 39


State 103

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	LExpr -> '*' RExpr .                                (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'&='           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'*='           reduce using rule 38
	'+'            reduce using rule 38
	'+='           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'-='           reduce using rule 38
	'/'            reduce using rule 38
	'/='           reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	']'            reduce using rule 38
	'^'            shift, and enter state 98
	'^='           reduce using rule 38
	'|='           reduce using rule 38
	'||'           reduce using rule 38
	'}'            reduce using rule 38
	%eof           reduce using rule 38


State 104

	LExpr2 -> '(' LExpr . ')'                           (rule 44)

	')'            shift, and enter state 109


State 105

	BLExpr -> BLExpr '[' . RExpr ']'                    (rule 46)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 108
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 106

	LExpr1 -> LExpr2 '++' .                             (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'&='           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'*='           reduce using rule 42
	'+'            reduce using rule 42
	'+='           reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'-='           reduce using rule 42
	'/'            reduce using rule 42
	'/='           reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'^'            reduce using rule 42
	'^='           reduce using rule 42
	'|='           reduce using rule 42
	'||'           reduce using rule 42
	'}'            reduce using rule 42
	%eof           reduce using rule 42


State 107

	LExpr1 -> LExpr2 '--' .                             (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'&='           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'*='           reduce using rule 43
	'+'            reduce using rule 43
	'+='           reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'-='           reduce using rule 43
	'/'            reduce using rule 43
	'/='           reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'^'            reduce using rule 43
	'^='           reduce using rule 43
	'|='           reduce using rule 43
	'||'           reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 108

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	BLExpr -> BLExpr '[' RExpr . ']'                    (rule 46)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	']'            shift, and enter state 170
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99


State 109

	LExpr2 -> '(' LExpr ')' .                           (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'&='           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'*='           reduce using rule 44
	'+'            reduce using rule 44
	'++'           reduce using rule 44
	'+='           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'--'           reduce using rule 44
	'-='           reduce using rule 44
	'/'            reduce using rule 44
	'/='           reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	']'            reduce using rule 44
	'^'            reduce using rule 44
	'^='           reduce using rule 44
	'|='           reduce using rule 44
	'||'           reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 110

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	ListRExpr -> RExpr .                                (rule 35)
	ListRExpr -> RExpr . ',' ListRExpr                  (rule 36)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            reduce using rule 35
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	','            shift, and enter state 169
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99


State 111

	RExpr -> Ident '(' ListRExpr . ')'                  (rule 28)

	')'            shift, and enter state 168


State 112

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr '||' RExpr .                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	'&='           reduce using rule 11
	')'            reduce using rule 11
	'*'            shift, and enter state 89
	'*='           reduce using rule 11
	'+'            shift, and enter state 90
	'+='           reduce using rule 11
	','            reduce using rule 11
	'-'            shift, and enter state 91
	'-='           reduce using rule 11
	'/'            shift, and enter state 92
	'/='           reduce using rule 11
	';'            reduce using rule 11
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'='            reduce using rule 11
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	']'            reduce using rule 11
	'^'            shift, and enter state 98
	'^='           reduce using rule 11
	'|='           reduce using rule 11
	'||'           reduce using rule 11
	'}'            reduce using rule 11
	%eof           reduce using rule 11


State 113

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	RExpr -> RExpr '^' RExpr .                          (rule 24)

	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'&&'           reduce using rule 24
	'&='           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'*='           reduce using rule 24
	'+'            reduce using rule 24
	'+='           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'-='           reduce using rule 24
	'/'            reduce using rule 24
	'/='           reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	']'            reduce using rule 24
	'^'            shift, and enter state 98
	'^='           reduce using rule 24
	'|='           reduce using rule 24
	'||'           reduce using rule 24
	'}'            reduce using rule 24
	%eof           reduce using rule 24


State 114

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr '>=' RExpr .                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           fail
	'%'            shift, and enter state 87
	'&&'           reduce using rule 18
	'&='           reduce using rule 18
	')'            reduce using rule 18
	'*'            shift, and enter state 89
	'*='           reduce using rule 18
	'+'            shift, and enter state 90
	'+='           reduce using rule 18
	','            reduce using rule 18
	'-'            shift, and enter state 91
	'-='           reduce using rule 18
	'/'            shift, and enter state 92
	'/='           reduce using rule 18
	';'            reduce using rule 18
	'<'            fail
	'<='           fail
	'='            reduce using rule 18
	'=='           fail
	'>'            fail
	'>='           fail
	']'            reduce using rule 18
	'^'            shift, and enter state 98
	'^='           reduce using rule 18
	'|='           reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18
	%eof           reduce using rule 18


State 115

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr '>' RExpr .                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           fail
	'%'            shift, and enter state 87
	'&&'           reduce using rule 17
	'&='           reduce using rule 17
	')'            reduce using rule 17
	'*'            shift, and enter state 89
	'*='           reduce using rule 17
	'+'            shift, and enter state 90
	'+='           reduce using rule 17
	','            reduce using rule 17
	'-'            shift, and enter state 91
	'-='           reduce using rule 17
	'/'            shift, and enter state 92
	'/='           reduce using rule 17
	';'            reduce using rule 17
	'<'            fail
	'<='           fail
	'='            reduce using rule 17
	'=='           fail
	'>'            fail
	'>='           fail
	']'            reduce using rule 17
	'^'            shift, and enter state 98
	'^='           reduce using rule 17
	'|='           reduce using rule 17
	'||'           reduce using rule 17
	'}'            reduce using rule 17
	%eof           reduce using rule 17


State 116

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr '==' RExpr .                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           fail
	'%'            shift, and enter state 87
	'&&'           reduce using rule 13
	'&='           reduce using rule 13
	')'            reduce using rule 13
	'*'            shift, and enter state 89
	'*='           reduce using rule 13
	'+'            shift, and enter state 90
	'+='           reduce using rule 13
	','            reduce using rule 13
	'-'            shift, and enter state 91
	'-='           reduce using rule 13
	'/'            shift, and enter state 92
	'/='           reduce using rule 13
	';'            reduce using rule 13
	'<'            fail
	'<='           fail
	'='            reduce using rule 13
	'=='           fail
	'>'            fail
	'>='           fail
	']'            reduce using rule 13
	'^'            shift, and enter state 98
	'^='           reduce using rule 13
	'|='           reduce using rule 13
	'||'           reduce using rule 13
	'}'            reduce using rule 13
	%eof           reduce using rule 13


State 117

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr '<=' RExpr .                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           fail
	'%'            shift, and enter state 87
	'&&'           reduce using rule 16
	'&='           reduce using rule 16
	')'            reduce using rule 16
	'*'            shift, and enter state 89
	'*='           reduce using rule 16
	'+'            shift, and enter state 90
	'+='           reduce using rule 16
	','            reduce using rule 16
	'-'            shift, and enter state 91
	'-='           reduce using rule 16
	'/'            shift, and enter state 92
	'/='           reduce using rule 16
	';'            reduce using rule 16
	'<'            fail
	'<='           fail
	'='            reduce using rule 16
	'=='           fail
	'>'            fail
	'>='           fail
	']'            reduce using rule 16
	'^'            shift, and enter state 98
	'^='           reduce using rule 16
	'|='           reduce using rule 16
	'||'           reduce using rule 16
	'}'            reduce using rule 16
	%eof           reduce using rule 16


State 118

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr '<' RExpr .                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           fail
	'%'            shift, and enter state 87
	'&&'           reduce using rule 15
	'&='           reduce using rule 15
	')'            reduce using rule 15
	'*'            shift, and enter state 89
	'*='           reduce using rule 15
	'+'            shift, and enter state 90
	'+='           reduce using rule 15
	','            reduce using rule 15
	'-'            shift, and enter state 91
	'-='           reduce using rule 15
	'/'            shift, and enter state 92
	'/='           reduce using rule 15
	';'            reduce using rule 15
	'<'            fail
	'<='           fail
	'='            reduce using rule 15
	'=='           fail
	'>'            fail
	'>='           fail
	']'            reduce using rule 15
	'^'            shift, and enter state 98
	'^='           reduce using rule 15
	'|='           reduce using rule 15
	'||'           reduce using rule 15
	'}'            reduce using rule 15
	%eof           reduce using rule 15


State 119

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr '/' RExpr .                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           reduce using rule 22
	'%'            reduce using rule 22
	'&&'           reduce using rule 22
	'&='           reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'*='           reduce using rule 22
	'+'            reduce using rule 22
	'+='           reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'-='           reduce using rule 22
	'/'            reduce using rule 22
	'/='           reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'='            reduce using rule 22
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	']'            reduce using rule 22
	'^'            shift, and enter state 98
	'^='           reduce using rule 22
	'|='           reduce using rule 22
	'||'           reduce using rule 22
	'}'            reduce using rule 22
	%eof           reduce using rule 22


State 120

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr '-' RExpr .                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           reduce using rule 20
	'%'            shift, and enter state 87
	'&&'           reduce using rule 20
	'&='           reduce using rule 20
	')'            reduce using rule 20
	'*'            shift, and enter state 89
	'*='           reduce using rule 20
	'+'            reduce using rule 20
	'+='           reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'-='           reduce using rule 20
	'/'            shift, and enter state 92
	'/='           reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	']'            reduce using rule 20
	'^'            shift, and enter state 98
	'^='           reduce using rule 20
	'|='           reduce using rule 20
	'||'           reduce using rule 20
	'}'            reduce using rule 20
	%eof           reduce using rule 20


State 121

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr '+' RExpr .                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           reduce using rule 19
	'%'            shift, and enter state 87
	'&&'           reduce using rule 19
	'&='           reduce using rule 19
	')'            reduce using rule 19
	'*'            shift, and enter state 89
	'*='           reduce using rule 19
	'+'            reduce using rule 19
	'+='           reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'-='           reduce using rule 19
	'/'            shift, and enter state 92
	'/='           reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	']'            reduce using rule 19
	'^'            shift, and enter state 98
	'^='           reduce using rule 19
	'|='           reduce using rule 19
	'||'           reduce using rule 19
	'}'            reduce using rule 19
	%eof           reduce using rule 19


State 122

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr '*' RExpr .                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           reduce using rule 21
	'%'            reduce using rule 21
	'&&'           reduce using rule 21
	'&='           reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'*='           reduce using rule 21
	'+'            reduce using rule 21
	'+='           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'-='           reduce using rule 21
	'/'            reduce using rule 21
	'/='           reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'='            reduce using rule 21
	'=='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	']'            reduce using rule 21
	'^'            shift, and enter state 98
	'^='           reduce using rule 21
	'|='           reduce using rule 21
	'||'           reduce using rule 21
	'}'            reduce using rule 21
	%eof           reduce using rule 21


State 123

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr '&&' RExpr .                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           reduce using rule 12
	'&='           reduce using rule 12
	')'            reduce using rule 12
	'*'            shift, and enter state 89
	'*='           reduce using rule 12
	'+'            shift, and enter state 90
	'+='           reduce using rule 12
	','            reduce using rule 12
	'-'            shift, and enter state 91
	'-='           reduce using rule 12
	'/'            shift, and enter state 92
	'/='           reduce using rule 12
	';'            reduce using rule 12
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'='            reduce using rule 12
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	']'            reduce using rule 12
	'^'            shift, and enter state 98
	'^='           reduce using rule 12
	'|='           reduce using rule 12
	'||'           reduce using rule 12
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 124

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr '%' RExpr .                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           reduce using rule 23
	'%'            reduce using rule 23
	'&&'           reduce using rule 23
	'&='           reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'*='           reduce using rule 23
	'+'            reduce using rule 23
	'+='           reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'-='           reduce using rule 23
	'/'            reduce using rule 23
	'/='           reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'='            reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	']'            reduce using rule 23
	'^'            shift, and enter state 98
	'^='           reduce using rule 23
	'|='           reduce using rule 23
	'||'           reduce using rule 23
	'}'            reduce using rule 23
	%eof           reduce using rule 23


State 125

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr '!=' RExpr .                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)

	'!='           fail
	'%'            shift, and enter state 87
	'&&'           reduce using rule 14
	'&='           reduce using rule 14
	')'            reduce using rule 14
	'*'            shift, and enter state 89
	'*='           reduce using rule 14
	'+'            shift, and enter state 90
	'+='           reduce using rule 14
	','            reduce using rule 14
	'-'            shift, and enter state 91
	'-='           reduce using rule 14
	'/'            shift, and enter state 92
	'/='           reduce using rule 14
	';'            reduce using rule 14
	'<'            fail
	'<='           fail
	'='            reduce using rule 14
	'=='           fail
	'>'            fail
	'>='           fail
	']'            reduce using rule 14
	'^'            shift, and enter state 98
	'^='           reduce using rule 14
	'|='           reduce using rule 14
	'||'           reduce using rule 14
	'}'            reduce using rule 14
	%eof           reduce using rule 14


State 126

	RExpr -> '(' RExpr ')' .                            (rule 10)

	'!='           reduce using rule 10
	'%'            reduce using rule 10
	'&&'           reduce using rule 10
	'&='           reduce using rule 10
	')'            reduce using rule 10
	'*'            reduce using rule 10
	'*='           reduce using rule 10
	'+'            reduce using rule 10
	'+='           reduce using rule 10
	','            reduce using rule 10
	'-'            reduce using rule 10
	'-='           reduce using rule 10
	'/'            reduce using rule 10
	'/='           reduce using rule 10
	';'            reduce using rule 10
	'<'            reduce using rule 10
	'<='           reduce using rule 10
	'='            reduce using rule 10
	'=='           reduce using rule 10
	'>'            reduce using rule 10
	'>='           reduce using rule 10
	']'            reduce using rule 10
	'^'            reduce using rule 10
	'^='           reduce using rule 10
	'|='           reduce using rule 10
	'||'           reduce using rule 10
	'}'            reduce using rule 10
	%eof           reduce using rule 10


State 127

	FunCall -> Ident '(' ListRExpr . ')'                (rule 33)

	')'            shift, and enter state 167


State 128

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	Stmt -> LExpr Assignment_op RExpr . ';'             (rule 92)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	';'            shift, and enter state 166
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99


State 129

	Type -> Type '[' Integer . ']'                      (rule 60)

	']'            shift, and enter state 165


State 130

	ListVarDeclInit -> VarDeclInit ',' . ListVarDeclInit    (rule 55)

	L_ident        shift, and enter state 15

	Ident          goto state 163
	ListVarDeclInitgoto state 164
	VarDeclInit    goto state 67

State 131

	Decl -> Type ListIdent ';' .                        (rule 52)

	')'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	'bool'         reduce using rule 52
	'char'         reduce using rule 52
	'else'         reduce using rule 52
	'float'        reduce using rule 52
	'int'          reduce using rule 52
	'void'         reduce using rule 52
	'while'        reduce using rule 52
	'}'            reduce using rule 52
	%eof           reduce using rule 52


State 132

	Decl -> Type ListVarDeclInit ';' .                  (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'bool'         reduce using rule 51
	'char'         reduce using rule 51
	'else'         reduce using rule 51
	'float'        reduce using rule 51
	'int'          reduce using rule 51
	'void'         reduce using rule 51
	'while'        reduce using rule 51
	'}'            reduce using rule 51
	%eof           reduce using rule 51


State 133

	Decl -> Type Ident '(' . ListParameter ')' ListStmtDecl    (rule 53)

	')'            reduce using rule 72
	'bool'         reduce using rule 76
	'char'         reduce using rule 76
	'const'        shift, and enter state 157
	'float'        reduce using rule 76
	'int'          reduce using rule 76
	'name'         shift, and enter state 158
	'ref'          shift, and enter state 159
	'res'          shift, and enter state 160
	'val'          shift, and enter state 161
	'valres'       shift, and enter state 162
	'void'         reduce using rule 76

	ListParameter  goto state 154
	Parameter      goto state 155
	Modality       goto state 156

State 134

	ListIdent -> Ident ',' . ListIdent                  (rule 57)

	L_ident        shift, and enter state 15

	Ident          goto state 152
	ListIdent      goto state 153

State 135

	VarDeclInit -> Ident '=' . ComplexRExpr             (rule 67)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	'{'            shift, and enter state 151
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 149
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	ComplexRExpr   goto state 150

State 136

	IterStmt -> 'do' ListStmtDecl 'while' . '(' RExpr ')' ';'    (rule 109)

	'('            shift, and enter state 148


State 137

	IterStmt -> 'for' '(' Stmt . ';' RExpr ';' Stmt ')' ListStmtDecl    (rule 110)

	';'            shift, and enter state 147


State 138

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	SelectionStmt -> 'if' '(' RExpr . ')' ListStmtDecl    (rule 106)
	SelectionStmt -> 'if' '(' RExpr . ')' ListStmtDecl 'else' ListStmtDecl    (rule 107)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            shift, and enter state 146
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99


State 139

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	JumpStmt -> 'return' '(' RExpr . ')'                (rule 105)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            shift, and enter state 145
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99


State 140

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	IterStmt -> 'while' '(' RExpr . ')' ListStmtDecl    (rule 108)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            shift, and enter state 144
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99


State 141

	ListStmtDecl -> StmtDecl ',' . ListStmtDecl         (rule 59)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'bool'         shift, and enter state 40
	'break'        shift, and enter state 41
	'char'         shift, and enter state 42
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'float'        shift, and enter state 45
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 48
	'return'       shift, and enter state 49
	'void'         shift, and enter state 50
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Decl           goto state 33
	ListStmtDecl   goto state 143
	Type           goto state 34
	StmtDecl       goto state 57
	Stmt           goto state 36
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 142

	Stmt -> '{' ListStmtDecl '}' .                      (rule 88)

	')'            reduce using rule 88
	','            reduce using rule 88
	';'            reduce using rule 88
	'bool'         reduce using rule 88
	'char'         reduce using rule 88
	'else'         reduce using rule 88
	'float'        reduce using rule 88
	'int'          reduce using rule 88
	'void'         reduce using rule 88
	'while'        reduce using rule 88
	'}'            reduce using rule 88
	%eof           reduce using rule 88


State 143

	ListStmtDecl -> StmtDecl ',' ListStmtDecl .         (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'bool'         reduce using rule 59
	'char'         reduce using rule 59
	'else'         reduce using rule 59
	'float'        reduce using rule 59
	'int'          reduce using rule 59
	'void'         reduce using rule 59
	'while'        reduce using rule 59
	'}'            reduce using rule 59
	%eof           reduce using rule 59


State 144

	IterStmt -> 'while' '(' RExpr ')' . ListStmtDecl    (rule 108)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'bool'         shift, and enter state 40
	'break'        shift, and enter state 41
	'char'         shift, and enter state 42
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'float'        shift, and enter state 45
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 48
	'return'       shift, and enter state 49
	'void'         shift, and enter state 50
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Decl           goto state 33
	ListStmtDecl   goto state 180
	Type           goto state 34
	StmtDecl       goto state 57
	Stmt           goto state 36
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 145

	JumpStmt -> 'return' '(' RExpr ')' .                (rule 105)

	';'            reduce using rule 105


State 146

	SelectionStmt -> 'if' '(' RExpr ')' . ListStmtDecl    (rule 106)
	SelectionStmt -> 'if' '(' RExpr ')' . ListStmtDecl 'else' ListStmtDecl    (rule 107)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'bool'         shift, and enter state 40
	'break'        shift, and enter state 41
	'char'         shift, and enter state 42
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'float'        shift, and enter state 45
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 48
	'return'       shift, and enter state 49
	'void'         shift, and enter state 50
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Decl           goto state 33
	ListStmtDecl   goto state 179
	Type           goto state 34
	StmtDecl       goto state 57
	Stmt           goto state 36
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 147

	IterStmt -> 'for' '(' Stmt ';' . RExpr ';' Stmt ')' ListStmtDecl    (rule 110)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 178
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 148

	IterStmt -> 'do' ListStmtDecl 'while' '(' . RExpr ')' ';'    (rule 109)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 177
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 149

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	ComplexRExpr -> RExpr .                             (rule 68)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	','            reduce using rule 68
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	';'            reduce using rule 68
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99
	'}'            reduce using rule 68


State 150

	VarDeclInit -> Ident '=' ComplexRExpr .             (rule 67)

	','            reduce using rule 67
	';'            reduce using rule 67


State 151

	ComplexRExpr -> '{' . ListComplexRExpr '}'          (rule 69)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	'{'            shift, and enter state 151
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 149
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	ComplexRExpr   goto state 175
	ListComplexRExprgoto state 176

State 152

	ListIdent -> Ident .                                (rule 56)
	ListIdent -> Ident . ',' ListIdent                  (rule 57)

	','            shift, and enter state 134
	';'            reduce using rule 56


State 153

	ListIdent -> Ident ',' ListIdent .                  (rule 57)

	';'            reduce using rule 57


State 154

	Decl -> Type Ident '(' ListParameter . ')' ListStmtDecl    (rule 53)

	')'            shift, and enter state 174


State 155

	ListParameter -> Parameter .                        (rule 73)
	ListParameter -> Parameter . ',' ListParameter      (rule 74)

	')'            reduce using rule 73
	','            shift, and enter state 173


State 156

	Parameter -> Modality . Type Ident                  (rule 75)

	'bool'         shift, and enter state 40
	'char'         shift, and enter state 42
	'float'        shift, and enter state 45
	'int'          shift, and enter state 48
	'void'         shift, and enter state 50

	Type           goto state 172

State 157

	Modality -> 'const' .                               (rule 79)

	'bool'         reduce using rule 79
	'char'         reduce using rule 79
	'float'        reduce using rule 79
	'int'          reduce using rule 79
	'void'         reduce using rule 79


State 158

	Modality -> 'name' .                                (rule 82)

	'bool'         reduce using rule 82
	'char'         reduce using rule 82
	'float'        reduce using rule 82
	'int'          reduce using rule 82
	'void'         reduce using rule 82


State 159

	Modality -> 'ref' .                                 (rule 78)

	'bool'         reduce using rule 78
	'char'         reduce using rule 78
	'float'        reduce using rule 78
	'int'          reduce using rule 78
	'void'         reduce using rule 78


State 160

	Modality -> 'res' .                                 (rule 80)

	'bool'         reduce using rule 80
	'char'         reduce using rule 80
	'float'        reduce using rule 80
	'int'          reduce using rule 80
	'void'         reduce using rule 80


State 161

	Modality -> 'val' .                                 (rule 77)

	'bool'         reduce using rule 77
	'char'         reduce using rule 77
	'float'        reduce using rule 77
	'int'          reduce using rule 77
	'void'         reduce using rule 77


State 162

	Modality -> 'valres' .                              (rule 81)

	'bool'         reduce using rule 81
	'char'         reduce using rule 81
	'float'        reduce using rule 81
	'int'          reduce using rule 81
	'void'         reduce using rule 81


State 163

	VarDeclInit -> Ident . '=' ComplexRExpr             (rule 67)

	'='            shift, and enter state 135


State 164

	ListVarDeclInit -> VarDeclInit ',' ListVarDeclInit .    (rule 55)

	';'            reduce using rule 55


State 165

	Type -> Type '[' Integer ']' .                      (rule 60)

	'*'            reduce using rule 60
	'['            reduce using rule 60
	L_ident        reduce using rule 60


State 166

	Stmt -> LExpr Assignment_op RExpr ';' .             (rule 92)

	')'            reduce using rule 92
	','            reduce using rule 92
	';'            reduce using rule 92
	'bool'         reduce using rule 92
	'char'         reduce using rule 92
	'else'         reduce using rule 92
	'float'        reduce using rule 92
	'int'          reduce using rule 92
	'void'         reduce using rule 92
	'while'        reduce using rule 92
	'}'            reduce using rule 92
	%eof           reduce using rule 92


State 167

	FunCall -> Ident '(' ListRExpr ')' .                (rule 33)

	';'            reduce using rule 33


State 168

	RExpr -> Ident '(' ListRExpr ')' .                  (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&&'           reduce using rule 28
	'&='           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'*='           reduce using rule 28
	'+'            reduce using rule 28
	'+='           reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'-='           reduce using rule 28
	'/'            reduce using rule 28
	'/='           reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'='            reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	']'            reduce using rule 28
	'^'            reduce using rule 28
	'^='           reduce using rule 28
	'|='           reduce using rule 28
	'||'           reduce using rule 28
	'}'            reduce using rule 28
	%eof           reduce using rule 28


State 169

	ListRExpr -> RExpr ',' . ListRExpr                  (rule 36)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	')'            reduce using rule 34
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 110
	ListRExpr      goto state 171
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10

State 170

	BLExpr -> BLExpr '[' RExpr ']' .                    (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	'&='           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'*='           reduce using rule 46
	'+'            reduce using rule 46
	'++'           reduce using rule 46
	'+='           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'--'           reduce using rule 46
	'-='           reduce using rule 46
	'/'            reduce using rule 46
	'/='           reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'^'            reduce using rule 46
	'^='           reduce using rule 46
	'|='           reduce using rule 46
	'||'           reduce using rule 46
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 171

	ListRExpr -> RExpr ',' ListRExpr .                  (rule 36)

	')'            reduce using rule 36


State 172

	Type -> Type . '[' Integer ']'                      (rule 60)
	Type -> Type . '*'                                  (rule 61)
	Parameter -> Modality Type . Ident                  (rule 75)

	'*'            shift, and enter state 68
	'['            shift, and enter state 69
	L_ident        shift, and enter state 15

	Ident          goto state 188

State 173

	ListParameter -> Parameter ',' . ListParameter      (rule 74)

	')'            reduce using rule 72
	'bool'         reduce using rule 76
	'char'         reduce using rule 76
	'const'        shift, and enter state 157
	'float'        reduce using rule 76
	'int'          reduce using rule 76
	'name'         shift, and enter state 158
	'ref'          shift, and enter state 159
	'res'          shift, and enter state 160
	'val'          shift, and enter state 161
	'valres'       shift, and enter state 162
	'void'         reduce using rule 76

	ListParameter  goto state 187
	Parameter      goto state 155
	Modality       goto state 156

State 174

	Decl -> Type Ident '(' ListParameter ')' . ListStmtDecl    (rule 53)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'bool'         shift, and enter state 40
	'break'        shift, and enter state 41
	'char'         shift, and enter state 42
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'float'        shift, and enter state 45
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 48
	'return'       shift, and enter state 49
	'void'         shift, and enter state 50
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Decl           goto state 33
	ListStmtDecl   goto state 186
	Type           goto state 34
	StmtDecl       goto state 57
	Stmt           goto state 36
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 175

	ListComplexRExpr -> ComplexRExpr .                  (rule 70)
	ListComplexRExpr -> ComplexRExpr . ',' ListComplexRExpr    (rule 71)

	','            shift, and enter state 185
	'}'            reduce using rule 70


State 176

	ComplexRExpr -> '{' ListComplexRExpr . '}'          (rule 69)

	'}'            shift, and enter state 184


State 177

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	IterStmt -> 'do' ListStmtDecl 'while' '(' RExpr . ')' ';'    (rule 109)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	')'            shift, and enter state 183
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99


State 178

	RExpr -> RExpr . '||' RExpr                         (rule 11)
	RExpr -> RExpr . '&&' RExpr                         (rule 12)
	RExpr -> RExpr . '==' RExpr                         (rule 13)
	RExpr -> RExpr . '!=' RExpr                         (rule 14)
	RExpr -> RExpr . '<' RExpr                          (rule 15)
	RExpr -> RExpr . '<=' RExpr                         (rule 16)
	RExpr -> RExpr . '>' RExpr                          (rule 17)
	RExpr -> RExpr . '>=' RExpr                         (rule 18)
	RExpr -> RExpr . '+' RExpr                          (rule 19)
	RExpr -> RExpr . '-' RExpr                          (rule 20)
	RExpr -> RExpr . '*' RExpr                          (rule 21)
	RExpr -> RExpr . '/' RExpr                          (rule 22)
	RExpr -> RExpr . '%' RExpr                          (rule 23)
	RExpr -> RExpr . '^' RExpr                          (rule 24)
	IterStmt -> 'for' '(' Stmt ';' RExpr . ';' Stmt ')' ListStmtDecl    (rule 110)

	'!='           shift, and enter state 86
	'%'            shift, and enter state 87
	'&&'           shift, and enter state 88
	'*'            shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'/'            shift, and enter state 92
	';'            shift, and enter state 182
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	'^'            shift, and enter state 98
	'||'           shift, and enter state 99


State 179

	SelectionStmt -> 'if' '(' RExpr ')' ListStmtDecl .    (rule 106)
	SelectionStmt -> 'if' '(' RExpr ')' ListStmtDecl . 'else' ListStmtDecl    (rule 107)

	')'            reduce using rule 106
	','            reduce using rule 106
	';'            reduce using rule 106
	'bool'         reduce using rule 106
	'char'         reduce using rule 106
	'else'         shift, and enter state 181
			(reduce using rule 106)

	'float'        reduce using rule 106
	'int'          reduce using rule 106
	'void'         reduce using rule 106
	'while'        reduce using rule 106
	'}'            reduce using rule 106
	%eof           reduce using rule 106


State 180

	IterStmt -> 'while' '(' RExpr ')' ListStmtDecl .    (rule 108)

	')'            reduce using rule 108
	','            reduce using rule 108
	';'            reduce using rule 108
	'bool'         reduce using rule 108
	'char'         reduce using rule 108
	'else'         reduce using rule 108
	'float'        reduce using rule 108
	'int'          reduce using rule 108
	'void'         reduce using rule 108
	'while'        reduce using rule 108
	'}'            reduce using rule 108
	%eof           reduce using rule 108


State 181

	SelectionStmt -> 'if' '(' RExpr ')' ListStmtDecl 'else' . ListStmtDecl    (rule 107)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'bool'         shift, and enter state 40
	'break'        shift, and enter state 41
	'char'         shift, and enter state 42
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'float'        shift, and enter state 45
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 48
	'return'       shift, and enter state 49
	'void'         shift, and enter state 50
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Decl           goto state 33
	ListStmtDecl   goto state 192
	Type           goto state 34
	StmtDecl       goto state 57
	Stmt           goto state 36
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 182

	IterStmt -> 'for' '(' Stmt ';' RExpr ';' . Stmt ')' ListStmtDecl    (rule 110)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'return'       shift, and enter state 49
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Stmt           goto state 191
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 183

	IterStmt -> 'do' ListStmtDecl 'while' '(' RExpr ')' . ';'    (rule 109)

	';'            shift, and enter state 190


State 184

	ComplexRExpr -> '{' ListComplexRExpr '}' .          (rule 69)

	','            reduce using rule 69
	';'            reduce using rule 69
	'}'            reduce using rule 69


State 185

	ListComplexRExpr -> ComplexRExpr ',' . ListComplexRExpr    (rule 71)

	'!'            shift, and enter state 23
	'('            shift, and enter state 24
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'-'            shift, and enter state 25
	'--'           shift, and enter state 14
	'False'        shift, and enter state 26
	'True'         shift, and enter state 27
	'{'            shift, and enter state 151
	L_integ        shift, and enter state 5
	L_charac       shift, and enter state 28
	L_doubl        shift, and enter state 29
	L_ident        shift, and enter state 15

	Integer        goto state 16
	Char           goto state 17
	Double         goto state 18
	Ident          goto state 19
	Boolean        goto state 20
	RExpr          goto state 149
	LExpr          goto state 22
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	ComplexRExpr   goto state 175
	ListComplexRExprgoto state 189

State 186

	Decl -> Type Ident '(' ListParameter ')' ListStmtDecl .    (rule 53)

	')'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'bool'         reduce using rule 53
	'char'         reduce using rule 53
	'else'         reduce using rule 53
	'float'        reduce using rule 53
	'int'          reduce using rule 53
	'void'         reduce using rule 53
	'while'        reduce using rule 53
	'}'            reduce using rule 53
	%eof           reduce using rule 53


State 187

	ListParameter -> Parameter ',' ListParameter .      (rule 74)

	')'            reduce using rule 74


State 188

	Parameter -> Modality Type Ident .                  (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75


State 189

	ListComplexRExpr -> ComplexRExpr ',' ListComplexRExpr .    (rule 71)

	'}'            reduce using rule 71


State 190

	IterStmt -> 'do' ListStmtDecl 'while' '(' RExpr ')' ';' .    (rule 109)

	')'            reduce using rule 109
	','            reduce using rule 109
	';'            reduce using rule 109
	'bool'         reduce using rule 109
	'char'         reduce using rule 109
	'else'         reduce using rule 109
	'float'        reduce using rule 109
	'int'          reduce using rule 109
	'void'         reduce using rule 109
	'while'        reduce using rule 109
	'}'            reduce using rule 109
	%eof           reduce using rule 109


State 191

	IterStmt -> 'for' '(' Stmt ';' RExpr ';' Stmt . ')' ListStmtDecl    (rule 110)

	')'            shift, and enter state 193


State 192

	SelectionStmt -> 'if' '(' RExpr ')' ListStmtDecl 'else' ListStmtDecl .    (rule 107)

	')'            reduce using rule 107
	','            reduce using rule 107
	';'            reduce using rule 107
	'bool'         reduce using rule 107
	'char'         reduce using rule 107
	'else'         reduce using rule 107
	'float'        reduce using rule 107
	'int'          reduce using rule 107
	'void'         reduce using rule 107
	'while'        reduce using rule 107
	'}'            reduce using rule 107
	%eof           reduce using rule 107


State 193

	IterStmt -> 'for' '(' Stmt ';' RExpr ';' Stmt ')' . ListStmtDecl    (rule 110)

	'('            shift, and enter state 11
	'*'            shift, and enter state 12
	'++'           shift, and enter state 13
	'--'           shift, and enter state 14
	'bool'         shift, and enter state 40
	'break'        shift, and enter state 41
	'char'         shift, and enter state 42
	'continue'     shift, and enter state 43
	'do'           shift, and enter state 44
	'float'        shift, and enter state 45
	'for'          shift, and enter state 46
	'if'           shift, and enter state 47
	'int'          shift, and enter state 48
	'return'       shift, and enter state 49
	'void'         shift, and enter state 50
	'while'        shift, and enter state 51
	'{'            shift, and enter state 52
	L_ident        shift, and enter state 15

	Ident          goto state 30
	FunCall        goto state 31
	LExpr          goto state 32
	LExpr1         goto state 8
	LExpr2         goto state 9
	BLExpr         goto state 10
	Decl           goto state 33
	ListStmtDecl   goto state 194
	Type           goto state 34
	StmtDecl       goto state 57
	Stmt           goto state 36
	JumpStmt       goto state 37
	SelectionStmt  goto state 38
	IterStmt       goto state 39

State 194

	IterStmt -> 'for' '(' Stmt ';' RExpr ';' Stmt ')' ListStmtDecl .    (rule 110)

	')'            reduce using rule 110
	','            reduce using rule 110
	';'            reduce using rule 110
	'bool'         reduce using rule 110
	'char'         reduce using rule 110
	'else'         reduce using rule 110
	'float'        reduce using rule 110
	'int'          reduce using rule 110
	'void'         reduce using rule 110
	'while'        reduce using rule 110
	'}'            reduce using rule 110
	%eof           reduce using rule 110


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 111
Number of terminals: 61
Number of non-terminals: 36
Number of states: 195
